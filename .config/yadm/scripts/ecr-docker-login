#!/usr/bin/env sh -e

SCRIPT_NAME=${0##*/}
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

if [ -f "${HOME}/.logging" ]; then
  source "${HOME}/.logging"
fi

usage() {
cat << USAGE
  Usage: ${SCRIPT_NAME} --account 1234567890 --region us-east-1
  
   -a --account  The account to login to. Defaults to the environment variables AWS_PROFILE or AWS_DEFAULT_PROFILE.
   -r --region   The region to login to. Defaults to us-east-1.
USAGE
}

account="${AWS_PROFILE:-${AWS_DEFAULT_PROFILE}}"
account="${account#awsaml-}"
region="us-east-1"

OPTS="a:r:h"
REQUIREDOPTS=("account" "region")

while getopts "${OPTS}" opt; do
  case "${opt}" in
    a) account="${OPTARG}" ;;
    r) region="${OPTARG}" ;;
    h) usage
       exit 0
       ;;
    *)
     log_error "Invalid Option: -${opt} ${OPTARG}"
     usage
     exit 1
     ;;
  esac
  shift
done
shift $((OPTIND -1))

# Validation...
for required in "${REQUIREDOPTS[@]}"; do
  if [[ -z "${!required}" ]]; then
    log_error "Required parameter missing"
    usage
    exit 1
  fi
done

log_info "Attempting to login to ECR in account ${account} - ${region}"

docker_version=$(docker version -f "{{.Server.Version}}")
log_info " > Docker ${docker_version} detected"
if [ ! "$(printf '%s\n' "17.06" "${docker_version}" | sort -V | head -n1)" = "17.06" ]; then
  additional_args="--no-include-email"
fi
# Workaround incase someone has installed 2.* of the aws-cli
aws_cli_version="$(echo "$(aws --version)" | cut -d ' ' -f 1 | cut -d / -f 2 | cut -d . -f 1)"
log_info " > Using V${aws_cli_version} of aws-cli to login to ECR"
if [ "${aws_cli_version}" -lt "2" ]; then
  $(AWS_PROFILE=awsaml-${account} aws ecr get-login --registry-ids ${account} --region ${region} ${additional_args} 2>&1 >/dev/null)
else
  echo "$(AWS_PROFILE=awsaml-${account} aws ecr get-login-password --region ${region} ${additional_args})" | \
    docker login -u AWS --password-stdin "https://${account}.dkr.ecr.${region}.amazonaws.com" 2>&1 >/dev/null
fi

exit 0
