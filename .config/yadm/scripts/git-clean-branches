#!/bin/bash
#
# Cleans up stale local branches.
#
# Checks for local branches that used to have a remote branch
# but that branch no longer exists. If the branch has no local
# changes that have not been merged into a specific branch then
# the branch is deleted.
#

MERGED_BRANCH_TO_CHECK=master
if [[ -n "${1}" ]]; then
    MERGED_BRANCH_TO_CHECK=${1}
fi
echo "Cleaning branches ${MERGED_BRANCH_TO_CHECK}"
git rev-parse --is-inside-work-tree &>/dev/null
if [[ $? -ne 0 ]]
then
  echo "Not in a git repository!"
  exit 1
fi

git fetch --prune

branches_without_remote=$(git branch --merged | egrep -v "(^\*|master|${MERGED_BRANCH_TO_CHECK:-master})")

for branch in ${branches_without_remote}
do
  remote_branches_containing_branch=$(git branch -r --contains ${branch} | grep ${MERGED_BRANCH_TO_CHECK})
  if [[ -n ${remote_branches_containing_branch} ]]; then
    git branch -d ${branch}
  else
    echo "Not deleting branch ${branch} as it has local changes that have not been merged into ${MERGED_BRANCH_TO_CHECK}"
  fi
done
git remote prune origin
