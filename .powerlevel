# Powerline configuration
POWERLEVEL9K_MODE='nerdfont-complete'

POWERLEVEL9K_PROMPT_ON_NEWLINE=true

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context aws dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator time rbenv pyenv custom_goenv custom_tfenv custom_terraform_workspace) # kubecontext)

POWERLEVEL9K_OS_ICON_BACKGROUND="white"
POWERLEVEL9K_OS_ICON_FOREGROUND="blue"
POWERLEVEL9K_DIR_HOME_FOREGROUND="white"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="white"
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND="white"

POWERLEVEL9K_SHORTEN_STRATEGY="truncate_middle"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=4

POWERLEVEL9K_BATTERY_CHARGING='yellow'
POWERLEVEL9K_BATTERY_CHARGED='green'
POWERLEVEL9K_BATTERY_DISCONNECTED='$DEFAULT_COLOR'
POWERLEVEL9K_BATTERY_LOW_THRESHOLD='10'
POWERLEVEL9K_BATTERY_LOW_COLOR='red'
POWERLEVEL9K_BATTERY_ICON='\uf1e6 '

POWERLEVEL9K_TIME_FORMAT="%D{%H:%M:%S %d.%m.%y}"

POWERLEVEL9K_CUSTOM_GOENV="_goenv_prompt"
POWERLEVEL9K_CUSTOM_GOENV_FOREGROUND="black"
POWERLEVEL9K_CUSTOM_GOENV_BACKGROUND="skyblue3"

_goenv_prompt () {
  if [[ -n "$GOENV_VERSION" ]]; then
    echo -n "$GOENV_VERSION \uE626"
  elif [ $commands[goenv] ]; then
    local goenv_version_name="$(goenv version-name)"
    local goenv_global="system"
    local goenv_root="$(goenv root)"
    if [[ -f "${goenv_root}/version" ]]; then
      goenv_global="$(goenv version-file-read ${goenv_root}/version)"
    fi
    if [[ "${goenv_version_name}" != "${goenv_global}" || "${POWERLEVEL9K_GOENV_PROMPT_ALWAYS_SHOW:-false}" == "true" ]]; then
      echo -n "$goenv_version_name \uE626"
    fi
  fi
}

POWERLEVEL9K_CUSTOM_TFENV="_tfenv_prompt"
POWERLEVEL9K_CUSTOM_TFENV_FOREGROUND="white"
POWERLEVEL9K_CUSTOM_TFENV_BACKGROUND="purple3"

_tfenv_prompt () {
  if [[ -n "$TFENV_VERSION" ]]; then
    echo "$TFENV_VERSION"
  elif [ $commands[tfenv] ]; then
    local tfenv_version_name="$(tfenv version-name)"
    local tfenv_global="system"
    local tfenv_root="/usr/local/opt/tfenv"
    if [[ -f "${tfenv_root}/version" ]]; then
      tfenv_global="$(cat ${tfenv_root}/version)"
    fi
    if [[ "${tfenv_version_name}" != "${tfenv_global}" || "${POWERLEVEL9K_TFENV_PROMPT_ALWAYS_SHOW:-false}" == "true" ]]; then
      echo "$tfenv_version_name"
    fi
  fi
}

POWERLEVEL9K_CUSTOM_TERRAFORM_WORKSPACE="_terraform_workspace"
POWERLEVEL9K_CUSTOM_TERRAFORM_WORKSPACE_FOREGROUND="white"
POWERLEVEL9K_CUSTOM_TERRAFORM_WORKSPACE_BACKGROUND="purple3"

_terraform_workspace() {
  if [[ -d .terraform ]]; then  
    workspace=$(cat .terraform/environment 2>/dev/null || return)
    echo -n "${workspace}"
  fi
}


POWERLEVEL9K_CUSTOM_KUBE_CONTEXT="_kube_context"
POWERLEVEL9K_CUSTOM_KUBE_CONTEXT_FOREGROUND="white"
POWERLEVEL9K_CUSTOM_KUBE_CONTEXT_BACKGROUND="magenta"

_kube_context() {
  if command -v kubectl >/dev/null 2>&1; then
    # Get the current Kuberenetes context
    local cur_ctx=$(kubectl config view -o=jsonpath='{.current-context}')
    cur_namespace="$(kubectl config view -o=jsonpath="{.contexts[?(@.name==\"${cur_ctx}\")].context.namespace}")"
    # If the namespace comes back empty set it default.
    if [[ -z "${cur_namespace}" ]]; then
      cur_namespace="default"
    fi

    local k8s_final_text=""

    if [[ "$cur_ctx" == "$cur_namespace" ]]; then
      # No reason to print out the same identificator twice
      k8s_final_text="$cur_ctx"
    else
      k8s_final_text="$cur_ctx/$cur_namespace"
    fi
    echo -n "${k8s_final_text} \U2388"
  fi
}

